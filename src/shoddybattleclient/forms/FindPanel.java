/*
 * FindPanel.java
 *
 * Created on May 29, 2009, 3:12:27 PM
 * This file is a part of Shoddy Battle.
 * Copyright (C) 2009  Catherine Fitzpatrick and Benjamin Gwin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, visit the Free Software Foundation, Inc.
 * online at http://gnu.org.
 */

package shoddybattleclient.forms;

import java.awt.FileDialog;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import shoddybattleclient.forms.UserPanel.TeamBox;
import shoddybattleclient.network.ServerLink;
import shoddybattleclient.shoddybattle.Generation;
import shoddybattleclient.shoddybattle.Generation.Metagame;
import shoddybattleclient.shoddybattle.Pokemon;

/**
 *
 * @author ben
 */
public class FindPanel extends javax.swing.JPanel {

    private ServerLink m_link;
    private Pokemon[] m_team;

    /** Creates new form FindPanel */
    public FindPanel(ServerLink link) {
        initComponents();
        m_link = link;
    }

    public void updateMetagames() {
        cmbGeneration.removeAllItems();
        for (Generation gen : m_link.getGenerations()) {
            cmbGeneration.addItem(gen);
        }
    }

    public void unsetTeam() {
        ((TeamBox)panelSprites).reset();
        btnLoad.setEnabled(true);
        btnCancel.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtBans = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtClauses = new javax.swing.JTextArea();
        lblDescription = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnLoad = new javax.swing.JButton();
        chkRated = new javax.swing.JCheckBox();
        panelSprites = new TeamBox();
        jPanel4 = new javax.swing.JPanel();
        btnFind = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbGeneration = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cmbLadder = new javax.swing.JComboBox();

        setOpaque(false);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 11));
        jLabel3.setText("Ban List:");

        txtBans.setColumns(14);
        txtBans.setEditable(false);
        txtBans.setFont(new java.awt.Font("Lucida Grande", 0, 11));
        txtBans.setLineWrap(true);
        txtBans.setRows(3);
        txtBans.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtBans);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 11));
        jLabel4.setText("Clauses:");

        txtClauses.setColumns(14);
        txtClauses.setEditable(false);
        txtClauses.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        txtClauses.setLineWrap(true);
        txtClauses.setRows(3);
        txtClauses.setWrapStyleWord(true);
        txtClauses.setMaximumSize(new java.awt.Dimension(200, 200));
        jScrollPane3.setViewportView(txtClauses);

        lblDescription.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        lblDescription.setText("<html>This is some information about this ladder. This should fit 3 lines worth I hope</html>");
        lblDescription.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jPanel1.setOpaque(false);

        btnLoad.setText("Load Team");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        chkRated.setSelected(true);
        chkRated.setText("Rated?");

        panelSprites.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelSprites.setOpaque(false);
        panelSprites.setLayout(new java.awt.GridLayout(2, 3));

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.GridLayout(1, 2, 2, 0));

        btnFind.setText("Find");
        btnFind.setEnabled(false);
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });
        jPanel4.add(btnFind);

        btnCancel.setText("Cancel");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel4.add(btnCancel);

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.GridLayout(2, 2, 5, 7));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Generation:");
        jPanel2.add(jLabel2);

        cmbGeneration.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Generation 4", "Generation 5" }));
        cmbGeneration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGenerationActionPerformed(evt);
            }
        });
        jPanel2.add(cmbGeneration);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Ladder:");
        jPanel2.add(jLabel1);

        cmbLadder.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Standard", "Uber", "UU", "Suspect" }));
        cmbLadder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLadderActionPerformed(evt);
            }
        });
        jPanel2.add(cmbLadder);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(chkRated, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(btnLoad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 221, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(panelSprites, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(chkRated)
                    .add(btnLoad))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelSprites, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblDescription, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .add(jLabel4)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblDescription, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(33, 33, 33)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(18, 18, 18)
                                        .add(jLabel3)))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        FileDialog fd = new FileDialog(m_link.getLobby(), "Choose a team to load", FileDialog.LOAD);
        fd.setVisible(true);
        if (fd.getFile() == null) return;
        String file = fd.getDirectory() + fd.getFile();
        TeamBox box = (TeamBox)panelSprites;
        m_team = box.loadFromTeam(file, m_link.getGeneration());
        btnFind.setEnabled(m_team != null);
        if (m_team == null) {
            JOptionPane.showMessageDialog(this, "Selected team file could not be loaded");
        }
    }//GEN-LAST:event_btnLoadActionPerformed

    public static String join(List<?> items, String glue) {
        int length = items.size();
        if (length == 0)
            return "";
        StringBuilder ret = new StringBuilder(items.get(0).toString());
        for (int i = 1; i < length; ++i) {
            ret.append(glue);
            ret.append(items.get(i).toString());
        }
        return ret.toString();
    }

    public void informMatchStarted() {
        btnFind.setEnabled(m_team != null);
        btnCancel.setEnabled(false);
        btnLoad.setEnabled(true);
    }

    private void cmbLadderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLadderActionPerformed
        Metagame metagame = (Metagame)cmbLadder.getSelectedItem();
        if (metagame != null) {
            lblDescription.setText("<html>" + metagame.getDescription() + "</html>");
            List<String> banList = Arrays.asList(metagame.getBanList());
            Collections.sort(banList);
            String bans = join(banList, ", ");
            txtBans.setText(bans);
            int partySize = metagame.getPartySize();
            List<String> clauseList = new ArrayList<String>(Arrays.asList(
                    metagame.getClauseList()));
            clauseList.add(0, partySize + " v. " + partySize);
            clauseList.add(1, metagame.getMaxTeamLength() + " Pokemon per team");
            String clauses = join(clauseList, ", ");
            txtClauses.setText(clauses);
            ((TeamBox)panelSprites).setTeamLength(metagame.getMaxTeamLength());
        }
    }//GEN-LAST:event_cmbLadderActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        int generationId = cmbGeneration.getSelectedIndex();
        int metagameId = cmbLadder.getSelectedIndex();
        if (metagameId < 0) {
            return;
        }
        
        boolean rated = chkRated.isSelected();
        m_link.queueTeam(generationId, metagameId, rated, m_team);
        btnFind.setEnabled(false);
        btnLoad.setEnabled(false);
        btnCancel.setEnabled(true);
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int generationId = cmbGeneration.getSelectedIndex();
        int metagameId = cmbLadder.getSelectedIndex();
        if (metagameId < 0) {
            return;
        }

        boolean rated = chkRated.isSelected();
        m_link.cancelQueue(generationId, metagameId, rated);
        btnFind.setEnabled(true);
        btnLoad.setEnabled(true);
        btnCancel.setEnabled(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void cmbGenerationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGenerationActionPerformed
        Generation generation = (Generation)cmbGeneration.getSelectedItem();
        if (generation == null) {
            return;
        }
        
        cmbLadder.removeAllItems();
        for (Metagame metagame : generation.getMetagames()) {
            cmbLadder.addItem(metagame);
        }
    }//GEN-LAST:event_cmbGenerationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnLoad;
    private javax.swing.JCheckBox chkRated;
    private javax.swing.JComboBox cmbGeneration;
    private javax.swing.JComboBox cmbLadder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JPanel panelSprites;
    private javax.swing.JTextArea txtBans;
    private javax.swing.JTextArea txtClauses;
    // End of variables declaration//GEN-END:variables

}
